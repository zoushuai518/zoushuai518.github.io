---
layout: post
title: "搭建git服务器"
category: tool
comments: true
date:   2015-03-27 16:59:51
---


####环境CentOS6.6

1.安装必须的依赖包
<pre><code>
[root@centos-git-server ~]# yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel perl-devel
[root@centos-git-server ~]# yum -y install gcc make
</code></pre>


2.编译安装git服务
<pre><code>
[root@centos-git-server ~]# wget http://git-core.googlecode.com/files/git-1.9.0.tar.gz
[root@centos-git-server ~]# tar zxvf git-1.9.0.tar.gz
[root@centos-git-server ~]# cd git-1.9.0
[root@centos-git-server ~]# make prefix=/usr/local all
[root@centos-git-server ~]# make prefix=/usr/local install  #root用户运行

"[root@centos-git-server ~]# ./configure
"[root@centos-git-server ~]# make && make install
</code></pre>

安装成功之后查看git版本号:  

查看版本号：git --version
/usr/local/bin/git --version
ln -s /usr/local/bin/git /usr/bin/git
git version 1.9.0

到此git服务安装完成  


3.创建一个git用户，用来运行git服务  
<pre><code>
[root@centos-git-server ~]# adduser git
</code></pre>


4.创建证书登录:  
<pre><code>
zs@zs-work:~$ ssh-keygen -t rsa
zs@zs-work:~$ scp ~/.ssh/id_rsa.pub root@192.168.130.100:~/
</code></pre>

我们这里使用[ssh免密码登录](/tool/2014/10/23/ssh免密码登录.html)


5.初始化Git仓库：  
先选定一个目录作为Git仓库，假定是/home/git/vd.git，在/home/git目录下输入命令：
<pre><code>
[root@centos-git-server ~]# git init --bare vd.git
</code></pre>

Git就会创建一个裸仓库，裸仓库没有工作区，因为服务器上的Git仓库纯粹是为了共享，所以不让用户直接登录到服务器上去改工作区，并且服务器上的Git仓库通常都以.git结尾。然后，把owner改为git:  
<pre><code>
[root@centos-git-server ~]# chown -R git:git vd.git
</code></pre>


6.禁用shell登录:  
出于安全考虑，第二步创建的git用户不允许登录shell，这可以通过编辑/etc/passwd文件完成。找到类似下面的一行：  
`git:x:1001:1001:,,,:/home/git:/bin/bash`
改为:  
`git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell`
这样，git用户可以正常通过ssh使用git，但无法登录shell，因为我们为git用户指定的git-shell每次一登录就自动退出。


7.克隆远程仓库:  
现在，可以通过git clone命令克隆远程仓库了，在各自的电脑上运行：
<pre><code>
zs@zs-work:~$ git clone git@192.168.130.100:/home/git/vd.git
Cloning into 'sample'...
warning: You appear to have cloned an empty repository.
</code></pre>
剩下的推送就简单了。


8.管理公钥  
[Gitosis](https://github.com/res0nat0r/gitosis)  
如果团队很小，把每个人的公钥收集起来放到服务器的`/home/git/.ssh/authorized_keys`文件里就是可行的。如果团队有几百号人，就没法这么玩了，这时，可以用Gitosis来管理公钥。


9.管理权限  
[Gitolite](https://github.com/sitaramc/gitolite)  
有很多不但视源代码如生命，而且视员工为窃贼的公司，会在版本控制系统里设置一套完善的权限控制，每个人是否有读写权限会精确到每个分支甚至每个目录下。因为Git是为Linux源代码托管而开发的，所以Git也继承了开源社区的精神，不支持权限控制。不过，因为Git支持钩子（hook），所以，可以在服务器端编写一系列脚本来控制提交等操作，达到权限控制的目的。Gitolite就是这个工具。



zs注: git服务认证方式可以是 https/ssh等--


客户端初始、增加及使用项目git-test:  
<pre><code>
zs@zs-work:~$ cd /git-repo
zs@zs-work:~$ mkdir git-test
zs@zs-work:~$ cd git-test
zs@zs-work:~$ git init
zs@zs-work:~$ touch README
zs@zs-work:~$ git add .
zs@zs-work:~$ git commit -a -m "init git-test"
zs@zs-work:~$ git remote add origin git@192.168.56.1:git-test.git
"zs@zs-work:~$ git remote add origin git@192.168.130.100:git-vd.git
zs@zs-work:~$ git push origin master
</code></pre>

注解：在新项目git-test里首次推送数据到服务器前，需先设定该服务器地址为远程仓库，但你不用事先到服务器上手工创建该项目的裸仓库— Gitosis 会在第一次遇到推送时自动创建。


客户端安装git客户端:  
<pre><code>
zs@zs-weimob:~$ sudo apt-get install git
"zs@zs-weimob:~$ yum install git
zs@zs-weimob:~$ git --version
git version 1.7.1
</code></pre>


#### ext
- [gitosis ??]
- [gitolite ??]
- [gitlab](/tool/2014/10/14/gitlab.html)

- [搭建Git服务器](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137583770360579bc4b458f044ce7afed3df579123eca000)
- [CentOS 6.5下Git服务器搭建](http://www.centoscn.com/CentosServer/ftp/2014/0414/2789.html)

