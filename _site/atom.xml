<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

   <title>Jekyll</title>
   <link href="/atom.xml" rel="self" type="application/atom+xml"/>
   <link href="" rel="alternate" type="text/html" />
   <updated>2014-12-04T16:53:45+08:00</updated>
   <id></id>
   <author>
     <name>邹帅</name>
     <email>zoushuai518@gmail.com</email>
   </author>

   
   <entry>
     <title>关系非关系型数据库选型</title>
     <link href="/mysql/2014/12/05/%E5%85%B3%E7%B3%BB%E9%9D%9E%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E9%80%89%E5%9E%8B.html"/>
     <updated>2014-12-05T00:16:51+08:00</updated>
     <id>/mysql/2014/12/05/关系非关系型数据库选型</id>
     <content type="html">&lt;p&gt;临时：  &lt;/p&gt;

&lt;p&gt;采用关系型数据库还是非关系型数据库完全取决于你的业务场景，如果你要实现实时要求高，数据一致性要求高的场景，关系型数据库；如果你要实现海量数据的查询和高并发，非关系型数据库（考虑Facebook一张表有一亿用户，如果用关系型数据库查询。磁盘IO也快撑不住了，而非关系型数据库则完全没有这个问题）&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>PHP 执行系统外部命令 system() exec() passthru()</title>
     <link href="/php/2014/11/28/PHP-%E6%89%A7%E8%A1%8C%E7%B3%BB%E7%BB%9F%E5%A4%96%E9%83%A8%E5%91%BD%E4%BB%A4.html"/>
     <updated>2014-11-28T19:00:51+08:00</updated>
     <id>/php/2014/11/28/PHP-执行系统外部命令</id>
     <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.jb51.net/article/19618.htm&quot;&gt;PHP 执行系统外部命令 system() exec() passthru()&lt;/a&gt;&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>PHP xinc持续集成服务器</title>
     <link href="/php/2014/11/28/PHP-xinc.html"/>
     <updated>2014-11-28T19:00:51+08:00</updated>
     <id>/php/2014/11/28/PHP-xinc</id>
     <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://code.google.com/p/xinc/&quot;&gt;xinc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://why100000.com/Htmls/tabPHP568.htm&quot;&gt;Xinc是持续集成PHP工程的一种方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www1.huachu.com.cn/read/readbookinfo.asp?sectionid=1000000027&quot;&gt;Xinc 持续集成服务器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
   </entry>
   
   <entry>
     <title>PHP 的 Phing 项目部署工具</title>
     <link href="/php/2014/11/28/PHP-phing.html"/>
     <updated>2014-11-28T19:00:51+08:00</updated>
     <id>/php/2014/11/28/PHP-phing</id>
     <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/zhangking/article/details/5734258&quot;&gt;PHP 的 phing 项目部署工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.hickwu.com/posts/12&quot;&gt;PHP 实现的项目构建工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.phing.info/&quot;&gt;phing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
   </entry>
   
   <entry>
     <title>php匿名函数及闭包</title>
     <link href="/php/2014/11/27/php_%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0%E5%8F%8A%E9%97%AD%E5%8C%85.html"/>
     <updated>2014-11-27T22:35:51+08:00</updated>
     <id>/php/2014/11/27/php_匿名函数及闭包</id>
     <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.nowamagic.net/librarys/veda/detail/1490&quot;&gt;匿名函数及闭包&lt;/a&gt;&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>学习php必备技能</title>
     <link href="/php/2014/11/27/%E5%AD%A6%E4%B9%A0php%E5%BF%85%E5%A4%87%E6%8A%80%E8%83%BD.html"/>
     <updated>2014-11-27T18:35:51+08:00</updated>
     <id>/php/2014/11/27/学习php必备技能</id>
     <content type="html">&lt;p&gt;很多学PHP的人一直也搞不清楚，一个PHP程序员和Java程序员或者是.net程序员有什么不同，告诉你，其实都一样，没有什么不同。下面的内容，就是针对一个Java程序员掌握的技能对比PHP来说的！告诉你，它们其实是一样的，不过是工具而已，没有高低贵贱之分。只不过你不熟练，不知道而已。&lt;/p&gt;

&lt;p&gt;1.语法：必须比较熟悉，在写代码的时候IDE的编辑器对某一行报错应该能够根据报错信息知道是什么样的语法错误，并且知道如何修正。&lt;/p&gt;

&lt;p&gt;2.命令：必须熟悉PHP带的一些常用命令及其常用选项，熟悉那些命令，自己运行php.exe -h 如果这些命令你没有全部使用过，那么你对PHP实际上还很不了解。&lt;/p&gt;

&lt;p&gt;3.工具：必须至少熟练使用一种IDE的开发工具，例如：Eclipse、Netbeans、zend或者editplus，ultraedit，包括进行工程管理、常用选项的设置、PHP插件的安装配置以及进行调试。&lt;/p&gt;

&lt;p&gt;4.API：PHP的核心API是非常庞大的，但是有一些内容笔者认为是必须熟悉的，否则不可能熟练的运用PHP，包括：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;文件目录处理函数包80%以上的函数的功能的灵活运用。&lt;/li&gt;
&lt;li&gt;日期时间函数中的80%以上的函数的功能的灵活运用。&lt;/li&gt;
&lt;li&gt;数学函数库中的100%的内容。&lt;/li&gt;
&lt;li&gt;网络库中的60%以上的内容，对各个函数的功能比较熟悉。&lt;/li&gt;
&lt;li&gt;字符串处理函数下的60%以上的内容，特别是各种处理函数。&lt;/li&gt;
&lt;li&gt;正则表达式函数下的90%以上的内容，特别是各种正则处理。&lt;/li&gt;
&lt;li&gt;一些安全库下的40%以上的内容，如果对于安全没有接触的话根本就不可能掌握PHP。&lt;/li&gt;
&lt;li&gt;XML处理，熟悉SAX、DOM以及JDOM的优缺点并且能够使用其中的一种完成XML的解析及内容处理。&lt;/li&gt;
&lt;li&gt;图形图像函数库下的80%以上的内容，特别是一些图像生成和处理。&lt;/li&gt;
&lt;li&gt;MySQL 数据库函数下的90%以上的内容，特别是处理各种数据的函数。&lt;/li&gt;
&lt;li&gt;数组处理函数下的90%以上的内容，特别是各种操作处理函数。&lt;/li&gt;
&lt;li&gt;其它PEAR，PECL，和一些扩展类库中的80%以上的内容，特别是一些常用的类的处理。&lt;/li&gt;
&lt;li&gt;针对不同的需求，查找不同的函数库。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;5.测试：必须熟悉使用phpunit编写测试用例完成代码的自动测试。&lt;/p&gt;

&lt;p&gt;6.管理：必须熟悉使用xinc, phing等完成工程管理的常用任务，例如工程编译、生成phpdoc、生成、版本控制、自动测试。&lt;/p&gt;

&lt;p&gt;7.排错：应该可以根据异常信息比较快速的定位问题的原因和大致位置。&lt;/p&gt;

&lt;p&gt;8.思想：必须掌握OOP的主要要求，这样使用PHP开发的系统才能是真正的PHP系统。&lt;/p&gt;

&lt;p&gt;9.规范：编写的代码必须符合流行的编码规范，这样程序的可读性才比较好。&lt;/p&gt;

&lt;p&gt;10.博学：掌握OOA、OOD、MS SQL Server、Oracle 、Zendframework、cakephp、symfony、模板技术等流行技术，掌握软件架构设计思想、搜索引擎优化、缓存系统设计、网站负载均衡、系统性能调优等实用技术。&lt;/p&gt;

&lt;p&gt;综合上述，没发现PHP和java有什么不同。PHP和Java，还是.net一样要学的东西有很多。&lt;/p&gt;

&lt;p&gt;如果可选的语言有好几种，那么，选择其中学习难度最小的一种。&lt;/p&gt;

&lt;p&gt;不要轻信广告，不要轻信媒体。唯一可以相信的是你的市场。&lt;/p&gt;

&lt;p&gt;个人可以喜欢一种、两种甚至好几种语言，但一定不要排斥其他任何一种语言。&lt;/p&gt;

&lt;p&gt;附一段对话：&lt;/p&gt;

&lt;p&gt;浮躁的人容易说：PHP语言不行，应该学Java，C#，VB.NET：－－是你自己不行了吧！？&lt;/p&gt;

&lt;p&gt;浮躁的人容易问：PHP和Java，C#，VB.NET哪个好；－－都好－－只要你能学好；&lt;/p&gt;

&lt;p&gt;浮躁的人容易问：我到底该学什么：－－别问，学就对了；&lt;/p&gt;

&lt;p&gt;浮躁的人容易问：PHP有钱途吗：－－建议你去抢银行&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>XSS跨站脚本与CSRF跨站请求伪造</title>
     <link href="/php/2014/11/25/XSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E4%B8%8ECSRF%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0.html"/>
     <updated>2014-11-25T22:41:51+08:00</updated>
     <id>/php/2014/11/25/XSS跨站脚本与CSRF跨站请求伪造</id>
     <content type="html">&lt;h5&gt;&lt;a href=&quot;/php/2014/10/10/Xss%E6%94%BB%E5%87%BB.html&quot;&gt;XSS&lt;/a&gt;&lt;/h5&gt;

&lt;h5&gt;&lt;a href=&quot;/php/2014/09/29/php-CSRF%E6%94%BB%E5%87%BB.html&quot;&gt;CSRF&lt;/a&gt;&lt;/h5&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nowamagic.net/librarys/veda/detail/606&quot;&gt;link&lt;/a&gt;&lt;/p&gt;
</content>
   </entry>
   
   <entry>
     <title>php printer</title>
     <link href="/php/2014/11/25/php_printer.html"/>
     <updated>2014-11-25T18:00:51+08:00</updated>
     <id>/php/2014/11/25/php_printer</id>
     <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://pecl.php.net/package/printer&quot;&gt;printer pecl package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://php.net/manual/fa/ref.printer.php&quot;&gt;link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
   </entry>
   
   <entry>
     <title>php常用函数列表</title>
     <link href="/php/2014/11/25/php_function_list.html"/>
     <updated>2014-11-25T18:00:51+08:00</updated>
     <id>/php/2014/11/25/php_function_list</id>
     <content type="html">&lt;h5&gt;String Functions&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;str_pad() 把字符串填充为指定的长度&lt;/li&gt;
&lt;li&gt;sprintf() 把格式化的字符串写入一个变量中&lt;/li&gt;
&lt;li&gt;strip_tags() 函数剥去 HTML、XML 以及 PHP 的标签&lt;/li&gt;
&lt;li&gt;htmlentities() 函数把字符转换为 HTML 实体&lt;/li&gt;
&lt;li&gt;htmlspecialchars() 函数把一些预定义的字符转换为 HTML 实体&lt;/li&gt;
&lt;li&gt;&lt;p&gt;str_replace() 函数使用一个字符串替换字符串中的另一些字符&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;printf() 输出格式化字符串&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sprintf() 函数把格式化的字符串写入一个变量中&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;vprintf() 输出格式化字符串&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;fprintf() 将格式化后的字符串写入到流&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;vfprintf() 将格式化字符串写入流&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;vsprintf() 返回格式化字符串&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;fscanf() 从文中格式化输出&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ctype_print() 做可打印字符检测&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;pattern Functions&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;split() 用正则表达式将字符串分割到数组中&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;Array Functions&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;array_flip() 函数返回一个反转后的数组，如果同一值出现了多次，则最后一个键名将作为它的值，所有其他的键名都将丢失&lt;/li&gt;
&lt;li&gt;shuffle() 函数把数组中的元素按随机顺序重新排列&lt;/li&gt;
&lt;li&gt;sizeof() 函数计算数组中的单元数目或对象中的属性个数&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;File Functions&lt;/h5&gt;

&lt;h5&gt;Filesystem Functions&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;popen() 函数打开进程文件指针&lt;/li&gt;
&lt;li&gt;proc_open() 执行一个命令，并且打开用来输入/输出的文件指针&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;Calendar Functions&lt;/h5&gt;

&lt;h5&gt;Date/Time Functions&lt;/h5&gt;

&lt;h5&gt;Db Functions&lt;/h5&gt;

&lt;h5&gt;Directory Functions&lt;/h5&gt;

&lt;h5&gt;HTTP Functions&lt;/h5&gt;

&lt;h5&gt;Image Functions&lt;/h5&gt;

&lt;h5&gt;IMAP Funictions&lt;/h5&gt;

&lt;h5&gt;LDAP Functions&lt;/h5&gt;

&lt;h5&gt;Mail Functions&lt;/h5&gt;

&lt;h5&gt;Network Functions&lt;/h5&gt;

&lt;h5&gt;SNMPF Functions&lt;/h5&gt;

&lt;h5&gt;URL Functions&lt;/h5&gt;

&lt;h5&gt;Variable Functions&lt;/h5&gt;

&lt;h5&gt;XML Functions&lt;/h5&gt;

&lt;h5&gt;System Functions&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;php&lt;em&gt;sapi&lt;/em&gt;name() 返回 web 服务器和 PHP 之间的接口类型&lt;/li&gt;
&lt;li&gt;system() 输出并返回最后一行shell结果&lt;/li&gt;
&lt;li&gt;exec() 不输出结果，返回最后一行shell结果，所有结果可以保存到一个返回的数组里面&lt;/li&gt;
&lt;li&gt;passthru() 只调用命令，把命令的运行结果原样地直接输出到标准输出设备上&lt;/li&gt;
&lt;/ul&gt;
</content>
   </entry>
   
   <entry>
     <title>CDATA</title>
     <link href="/standard/2014/11/25/CDATA.html"/>
     <updated>2014-11-25T01:16:51+08:00</updated>
     <id>/standard/2014/11/25/CDATA</id>
     <content type="html">&lt;h5&gt;一.xml解析&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;XML 解析器通常会解析 XML 文档中所有的文本。&lt;/li&gt;
&lt;li&gt;当某个 XML 元素被解析时，其标签之间的文本也会被解析&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;二.PCDATA&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;XML 的特殊字符（&amp;amp;、&amp;lt; 和 &amp;gt;）在 PCDATA 中可以识别，并用于解析元素名称和实体。PCDATA（字符数据）区域被解析器视为数据块，从而允许您在数据流中包含任意字符。&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;三.CDATA&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;术语 CDATA 指的是不应由 XML 解析器进行解析的文本数据（Unparsed Character Data）。&lt;/li&gt;
&lt;li&gt;在 XML 元素中，&amp;quot;&amp;lt;&amp;quot; 和 &amp;quot;&amp;amp;&amp;quot; 是非法的。&lt;/li&gt;
&lt;li&gt;&amp;quot;&amp;lt;&amp;quot; 会产生错误，因为解析器会把该字符解释为新元素的开始。&lt;/li&gt;
&lt;li&gt;&amp;quot;&amp;amp;&amp;quot; 也会产生错误，因为解析器会把该字符解释为字符实体的开始。&lt;/li&gt;
&lt;li&gt;某些文本，比如 JavaScript 代码，包含大量 &amp;quot;&amp;lt;&amp;quot; 或 &amp;quot;&amp;amp;&amp;quot; 字符。为了避免错误，可以将脚本代码定义为 CDATA。&lt;/li&gt;
&lt;li&gt;CDATA 部分中的所有内容都会被解析器忽略。&lt;/li&gt;
&lt;li&gt;CDATA 部分由 &amp;quot;&amp;lt;![CDATA[ 开始，由 ]]&amp;gt;&amp;quot; 结束&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;关于 CDATA 部分的注释：&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;CDATA 部分不能包含字符串 &amp;quot;]]&amp;gt;&amp;quot;。也不允许嵌套的 CDATA 部分。&lt;/li&gt;
&lt;li&gt;标记 CDATA 部分结尾的 &amp;quot;]]&amp;gt;&amp;quot; 不能包含空格或折行。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://www.w3school.com.cn/xml/xml_cdata.asp&quot;&gt;ext link&lt;/a&gt;&lt;/p&gt;
</content>
   </entry>
   

</feed>
